{
   "version" : 6,
   "cmakeMinimumRequired" : {
      "major" : 3,
      "patch" : 0,
      "minor" : 21
   },
   "configurePresets" : [
      {
         "generator" : "Ninja",
         "hidden" : true,
         "binaryDir" : "build",
         "name" : "common"
      },
      {
         "name" : "common-linux",
         "hidden" : true,
         "inherits" : "common"
      },
      {
         "name" : "common-windows",
         "inherits" : "common",
         "hidden" : true
      },
      {
         "name" : "gcc",
         "cacheVariables" : {
            "CMAKE_C_COMPILER" : "gcc",
            "CMAKE_CXX_COMPILER" : "g++"
         },
         "hidden" : true
      },
      {
         "cacheVariables" : {
            "CMAKE_C_COMPILER" : "clang",
            "CMAKE_CXX_COMPILER" : "clang++"
         },
         "hidden" : true,
         "name" : "clang"
      },
      {
         "name" : "msvc",
         "hidden" : true,
         "cacheVariables" : {
            "CMAKE_C_COMPILER" : "cl",
            "CMAKE_CXX_COMPILER" : "cl"
         }
      },
      {
         "name" : "sanitizer-address",
         "hidden" : true,
         "cacheVariables" : {
            "CMAKE_CXX_FLAGS" : "-fsanitize=address"
         }
      },
      {
         "hidden" : true,
         "cacheVariables" : {
            "CMAKE_CXX_FLAGS" : "-fsanitize=leak"
         },
         "name" : "sanitizer-leak"
      },
      {
         "name" : "sanitizer-memory",
         "hidden" : true,
         "cacheVariables" : {
            "CMAKE_CXX_FLAGS" : "-fsanitize=memory"
         }
      },
      {
         "cacheVariables" : {
            "CMAKE_CXX_FLAGS" : "-fsanitize=thread"
         },
         "hidden" : true,
         "name" : "sanitizer-thread"
      },
      {
         "name" : "sanitizer-undefined",
         "cacheVariables" : {
            "CMAKE_CXX_FLAGS" : "-fsanitize=undefined"
         },
         "hidden" : true
      },
      {
         "name" : "coverage",
         "cacheVariables" : {
            "ENABLE_TEST_COVERAGE" : "ON"
         },
         "hidden" : true
      },
      {
         "name" : "debug",
         "inherits" : [
            "common"
         ],
         "cacheVariables" : {
            "CMAKE_BUILD_TYPE" : "Debug"
         }
      },
      {
         "name" : "release",
         "inherits" : [
            "common"
         ],
         "cacheVariables" : {
            "CMAKE_BUILD_TYPE" : "ReleaseWithDebInfo"
         }
      },
      {
         "name" : "linux-debug",
         "hidden": true,
         "inherits" : [
            "common-linux",
            "debug"
         ]
      },
      {
         "name" : "linux-release",
         "hidden": true,
         "inherits" : [ "common-linux", "release" ]
      },
      {
         "inherits" : [
            "linux-debug",
            "gcc"
         ],
         "name" : "linux-gcc-debug"
      },
      {
         "name" : "linux-gcc-release",
         "inherits" : [
            "linux-release",
            "gcc"
         ]
      },
      {
         "name" : "linux-clang-debug",
         "inherits" : [
            "linux-debug",
            "clang"
         ]
      },
      {
         "name" : "linux-clang-release",
         "inherits" : [
            "linux-release",
            "clang"
         ]
      },
      {
         "inherits" : [
            "linux-gcc-debug",
            "sanitizer-address"
         ],
         "name" : "linux-gcc-debug-sanitizer-address"
      },
      {
         "name" : "linux-gcc-debug-sanitizer-ub",
         "inherits" : [
            "linux-gcc-debug",
            "sanitizer-undefined"
         ]
      },
      {
         "name" : "linux-gcc-debug-sanitizer-ub-coverage",
         "inherits" : [
            "linux-gcc-debug-sanitizer-ub",
            "coverage"
         ]
      },
      {
         "name" : "linux-gcc-debug-sanitizer-thread",
         "inherits" : [
            "linux-gcc-debug",
            "sanitizer-thread"
         ]
      },
      {
         "name" : "linux-gcc-debug-sanitizer-address-ub",
         "inherits" : [
            "linux-gcc-debug-sanitizer-address",
            "sanitizer-undefined"
         ]
      },
      {
         "inherits" : [
            "linux-clang-debug",
            "sanitizer-address"
         ],
         "name" : "linux-clang-debug-sanitizer-address"
      },
      {
         "name" : "linux-clang-debug-sanitizer-ub",
         "inherits" : [
            "linux-clang-debug",
            "sanitizer-undefined"
         ]
      },
      {
         "name" : "linux-clang-debug-sanitizer-thread",
         "inherits" : [
            "linux-clang-debug",
            "sanitizer-thread"
         ]
      },
      {
         "inherits" : [
            "linux-clang-debug-sanitizer-address",
            "sanitizer-undefined"
         ],
         "name" : "linux-clang-debug-sanitizer-address-ub"
      }
   ],
   "buildPresets" : [
      {
         "configurePreset" : "debug",
         "name" : "debug",
         "displayName" : "Build in debug mode"
      },
      {
         "displayName" : "Build in release mode",
         "configurePreset" : "release",
         "name" : "release"
      }
   ],
   "testPresets" : [
      {
         "hidden" : true,
         "execution" : {
            "stopOnFailure" : true
         },
         "output" : {
            "outputOnFailure" : true
         },
         "name" : "common"
      },
      {
         "environment" : {
            "ASAN_OPTIONS" : "protect_shadow_gap=0"
         },
         "name" : "sanitizer-address",
         "hidden" : true
      },
      {
         "configurePreset" : "debug",
         "name" : "debug",
         "inherits" : [
            "common"
         ]
      },
      {
         "inherits" : [
            "debug",
            "sanitizer-address"
         ],
         "name" : "debug-sanitizer-address"
      }
   ],
   "workflowPresets" : [
      {
         "name" : "dev",
         "description" : "Developer workflow without installation",
         "steps" : [
            {
               "type" : "configure",
               "name" : "debug"
            },
            {
               "type" : "build",
               "name" : "debug"
            },
            {
               "type" : "test",
               "name" : "debug"
            }
         ]
      }
   ]
}
